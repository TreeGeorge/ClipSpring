<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="BuyMovieListMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="buyMovieListMap" type="study.spring.clip.model.BuyMovieList">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="buy_movie_list_no" column="buy_movie_list_no" />
        <result property="date" column="date" />
        <result property="is_delete" column="is_delete" />
        <result property="user_no" column="user_no" />
        <result property="movie_no" column="movie_no" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="thumbnail" column="thumbnail" />
        <result property="coin" column="coin" />
    </resultMap>
    
    <select id="buyList"
		parameterType="study.spring.clip.model.BuyMovieList"
		resultMap="buyMovieListMap">
		SELECT name, Floor(m.price / 100 * (100 - m.sale)) as price, b.date FROM movie m, buy_movie_list b WHERE b.movie_no = m.movie_no 
		AND user_no = #{user_no};
	</select>
	
	<select id="checkList"
		parameterType="study.spring.clip.model.BuyMovieList"
		resultType="String">
		SELECT date FROM buy_movie_list b, movie m WHERE b.movie_no = m.movie_no AND user_no = #{user_no} AND date = #{date} AND Floor(m.price / 100 * (100 - m.sale)) = #{price};
	</select>
	
	<select id="checkWatched"
	 	parameterType="study.spring.clip.model.BuyMovieList"
	 	resultType="String">
	 	SELECT is_watched FROM buy_movie_list b, movie m WHERE b.movie_no = m.movie_no AND user_no = #{user_no} AND date = #{date} AND Floor(m.price / 100 * (100 - m.sale)) = #{price} AND is_watched = 'N';
	</select>
	
	<!-- 영화 구매했을때 코인차감 -->
	<update id="userCoinEdit"
    	parameterType="study.spring.clip.model.BuyMovieList">
        UPDATE user SET coin = (#{coin} - #{price})
		WHERE user_no = #{user_no};
    </update>
    
    <!-- 영화 환불했을때 코인 상승 -->
    <update id="userMovieDelete"
    	parameterType="study.spring.clip.model.BuyMovieList">
        UPDATE user SET coin = (#{coin} + #{price})
		WHERE user_no = #{user_no};
    </update>
    
    <delete id="deleteItem"
		parameterType="study.spring.clip.model.BuyMovieList">
		DELETE FROM buy_movie_list WHERE user_no = #{user_no} AND date = #{date};	
	</delete>
	
	<!-- 태희쨩이 추가함 이식 후에 주석 지워주삼-->
	<!-- 행 삭제 -->
	<delete id="deleteList" parameterType="study.spring.clip.model.BuyMovieList">
		DELETE FROM buy_movie_list WHERE user_no=#{user_no};
	</delete>
    
</mapper>