<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="MovieMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="movieMap" type="study.spring.clip.model.Movie">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="movie_no" column="movie_no" />
        <result property="name" column="name" />
        <result property="is_rent" column="is_rent" />
        <result property="is_buy" column="is_buy" />
        <result property="director" column="director" />
        <result property="price" column="price" />
        <result property="sale" column="sale" />
        <result property="thumbnail" column="thumbnail" />
        <result property="preview" column="preview" />
        <result property="summary" column="summary" />
        <result property="runtime" column="runtime" />
        <result property="age" column="age" />
    </resultMap>

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="oneMovie" parameterType="study.spring.clip.model.Movie"
        resultMap="movieMap">
        SELECT movie_no, name, is_buy, is_rent, director, price, sale, thumbnail, preview, summary, runtime, age FROM movie 
        WHERE movie_no=#{movie_no};
    </select>
  
    
    <!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.clip.model.Movie"
		resultMap="movieMap">
		SELECT movie_no, name FROM movie
		
		<where>
			<if test="name != null and name != ''">
				name LIKE concat('%', #{name}, '%')
			</if>
			<if test="director != null and director != ''">
				OR director LIKE concat('%', #{director}, '%')
			</if>
		</where>
	</select>

</mapper>