<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="MovieMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    
        <resultMap id="movieMap" type="study.spring.clip.model.Movie">

        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="movie_no" column="movie_no" />
        <result property="name" column="name" />
        <result property="type" column="type"/> 
        <result property="director" column="director" />
        <result property="price" column="price" />
        <result property="sale" column="sale" />
        <result property="thumbnail" column="thumbnail" />
        <result property="preview" column="preview" />
        <result property="summary" column="summary" />
        <result property="runtime" column="runtime" />
        <result property="age" column="age" />
        <result property="movie_like_no" column="movie_like_no" />
        <result property="score" column="score" />
        <result property="user_no" column="user_no" />
        <result property="release_date" column="release_date" />
        <result property="category_type_no" column="category_type_no" />

    </resultMap>

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="oneMovie" parameterType="study.spring.clip.model.Movie"
        resultMap="movieMap">
        SELECT c.category_type_no, m.movie_no, release_date, IF(type='B',"구매","대여") AS type, name, director, Floor(price / 100 * (100 - sale)) AS sale, price, thumbnail, preview, summary, runtime, IF(age='12', '12세 이용가', IF(age='15', '15세 이용가', IF(age='19', '청소년 관람 불가', '전체 이용가'))) as age 
        FROM movie m, movie_category c
        WHERE m.movie_no = c.movie_no
        AND m.movie_no= #{movie_no}
        ORDER BY category_type_no
        LIMIT 1;
    </select>
    <!-- 관심여부확인 -->
     <select id="interestCommit" parameterType="study.spring.clip.model.Movie"
        resultType="int">
        SELECT movie_no FROM movie
        WHERE movie_no IN(SELECT movie_no=#{movie_no} AND user_no=#{user_no} FROM interest);
    </select>
    <!-- 좋아요여부확인 -->
    <select id="likeCommit" parameterType="study.spring.clip.model.Movie"
        resultType="int">
        SELECT movie_no FROM movie
        WHERE movie_no IN(SELECT movie_no=#{movie_no} AND user_no=#{user_no} FROM movie_like);
    </select>
	
	<!-- 라이크개수 -->
	<select id="likeMovie" parameterType="study.spring.clip.model.Movie"
        resultType="int">
        SELECT COUNT(movie_like_no) FROM movie_like
        WHERE movie_no=#{movie_no};
    </select>
    <select id="likeRecent" parameterType="study.spring.clip.model.Movie"
        resultMap="movieMap">
        SELECT COUNT(movie_like_no) FROM movie_like
        WHERE movie_no=#{movie_no};
    </select>

	<!-- 해당영화평점평균 -->
    <select id="starMovie" parameterType="study.spring.clip.model.Movie"
        resultType="double">
        SELECT ROUND((SUM(score)/COUNT(*)),1) FROM clip.star_rating
        WHERE movie_no=#{movie_no}; 
    </select>
    <!-- 참여자수 -->
    <select id="peopleMovie" parameterType="study.spring.clip.model.Movie"
        resultType="int">
        SELECT COUNT(*) FROM clip.star_rating
        WHERE movie_no=#{movie_no}; 
    </select>
    
    <!-- 영화 배우 -->
    <select id="actorMovie" parameterType="study.spring.clip.model.Movie"
        resultMap="movieMap">
        select name from actor
		where actor_no IN(select actor_no from movie_actor where movie_no=#{movie_no}); 
    </select>
    
    <!-- 검색을 위한 기능 정의 -->
	<select id="searchMovieList"
		parameterType="study.spring.clip.model.Movie"
		resultMap="movieMap">
		SELECT movie_no, runtime, thumbnail, name, IF(age='12', '12세 이용가',
		IF(age='15', '15세 이용가', IF(age='19', '청소년 관람 불가', '전체 이용가'))) as age,
		IF(type='B',"구매","대여") AS type, Floor(price / 100 * (100 - sale)) AS
		price, director FROM movie
		WHERE movie_no IN (SELECT movie_no FROM movie_actor WHERE actor_no =
		(SELECT actor_no FROM actor WHERE name = #{name}))
		OR name LIKE concat('%', #{name}, '%')
		OR director LIKE concat('%', #{name}, '%')
		ORDER BY name;
	</select>
 

</mapper>